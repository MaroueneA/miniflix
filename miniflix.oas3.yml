openapi: 3.0.1
info:
  title: Miniflix
  description: "Netflix-like minimalistic app"
  version: 1.0.0
servers:
  - url: http://localhost:3000
  - url: http://127.0.0.1:4010
tags:
  - name: movie
    description: Everything about your movies
  - name: category
    description: Everything about categories
paths:
  /movie:
    get:
      tags:
        - movie
      summary: get list of movies
      responses:
        500:
          description: Internal server error
          content: {}
        200:
          description: list of movies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Movie"

    put:
      tags:
        - movie
      summary: Update an existing movie
      requestBody:
        description: Movie object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Movie"
        required: true
      responses:
        404:
          description: Movie not found
          content: {}
        200:
          description: succesfully updated
    post:
      tags:
        - movie
      summary: Add a new movie to the store
      requestBody:
        description: Movie object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Movie"
        required: true
      responses:
        405:
          description: Invalid input
          content: {}

  /movie/{id}:
    get:
      tags:
        - movie
      summary: Find movie by ID
      description: Returns a single movie
      parameters:
        - name: movieId
          in: path
          description: ID of movie to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Movie"
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: movie not found
          content: {}
    delete:
      tags:
        - movie
      summary: Deletes a movie
      parameters:
        - name: api_key
          in: header
          schema:
            type: string
        - name: movieId
          in: path
          description: movie id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: movie not found
          content: {}
components:
  schemas:
    Movie:
      type: object
      properties:
        id:
          type: integer
          format: uint64
        title:
          type: string
        description:
          type: string
